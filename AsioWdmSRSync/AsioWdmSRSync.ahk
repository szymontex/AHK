; Path to the log file generated by Antelope Audio interface. You may CHANGE THAT according to your antelope interface
LogPath := "C:\Users\Public\.AntelopeAudio\discrete8_hybrid_tb3\panels\1.1.6\panel_log.txt"

; Stores the previous sync_freq value to detect changes
PreviousSyncFreq := ""
LastReadPosition := 0

; Defining the list of audio devices to update. You may CHANGE THAT according to your antelope interface
Devices := ["D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Playback 1/2\Render"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Playback 3/4\Render"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Playback 5/6\Render"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Playback 7/8\Render"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Recording 1/2\Capture"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Recording 3/4\Capture"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Recording 5/6\Capture"
           ,"D8 SC TB3\Device\Discrete 8 Pro SC USB Audio Driver Recording 7/8\Capture"]

; MsgBox, AHK script started.

Loop
{
    ; Open the log file in read mode
    File := FileOpen(LogPath, "r")
    
    if !File
    {
        ; MsgBox, Cannot open log file.
        return
    }

    ; Seek to where we left off previously
    File.Seek(LastReadPosition)

    ; Read new lines from the log file
    while !File.AtEOF()
    {
        Line := File.ReadLine()

        ; Check if the line contains sync_freq
        If RegExMatch(Line, "sync_freq:\s*(\d+)", match)
        {
            CurrentSyncFreq := match1
            ; MsgBox, Found sync_freq: %CurrentSyncFreq%
            
            ; Check if the sync_freq value has changed
            If (CurrentSyncFreq != PreviousSyncFreq)
            {
                ; Update the previous value
                PreviousSyncFreq := CurrentSyncFreq
                ; MsgBox, Sync Frequency changed to: %CurrentSyncFreq% Hz
                
                ; Execute SoundVolumeView command for each device
                Loop, % Devices.MaxIndex()
                {
                    Device := Devices[A_Index]
                    ; CHANGE PATH to your SoundVolumeView
                    Command := "C:\IT\!AHK\SoundVolumeView\SoundVolumeView.exe /SetDefaultFormat """ . Device . """ 24 " . CurrentSyncFreq
                    ; MsgBox, Executing command: %Command%
                    Run, %ComSpec% /c %Command%,, Hide
                }
            }
        }
    }

    ; Save the current position in the file
    LastReadPosition := File.Tell()
    
    ; Close the file
    File.Close()
    
    Sleep, 1000 ; Check every 1 second
}
